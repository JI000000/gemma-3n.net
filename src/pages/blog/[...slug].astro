---
import { getCollection } from 'astro:content';
import MainLayout from '../../layouts/MainLayout.astro';
import type { CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  return blogEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

interface Props {
  entry: CollectionEntry<'blog'>;
}

const { entry } = Astro.props;
const { Content } = await entry.render();

const schema = {
  "@context": "https://schema.org",
  "@type": "TechArticle",
  "headline": entry.data.title,
  "description": entry.data.description,
  "datePublished": entry.data.pubDate.toISOString(),
  "author": {
    "@type": "Organization",
    "name": "Gemma-3n.net"
  },
  "publisher": {
    "@type": "Organization",
    "name": "Gemma-3n.net",
    "logo": {
      "@type": "ImageObject",
      "url": "https://gemma-3n.net/logo.png" // Replace with actual logo URL
    }
  }
};
---
<script type="application/ld+json" set:html={JSON.stringify(schema)} />

<MainLayout title={entry.data.title} description={entry.data.description}>
  <article class="prose dark:prose-invert max-w-4xl mx-auto px-4 py-24 sm:py-32">
    <header class="mb-8">
      <h1 class="!text-4xl sm:!text-5xl !leading-tight">{entry.data.title}</h1>
      <p class="text-lg text-slate-500 dark:text-gray-400">
        Posted on <time datetime={entry.data.pubDate.toISOString()}>
          {new Date(entry.data.pubDate).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}
        </time> by {entry.data.author}
      </p>
    </header>
    <Content />
  </article>
</MainLayout> 