---
import { getCollection } from 'astro:content';
import MainLayout from '../../layouts/MainLayout.astro';
import type { CollectionEntry } from 'astro:content';
import Giscus from '../../components/Giscus.astro';
import ShareButtons from '../../components/ShareButtons.astro';

export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  return blogEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

interface Props {
  entry: CollectionEntry<'blog'>;
}

const { entry } = Astro.props;
const { Content } = await entry.render();

const schema = {
  "@context": "https://schema.org",
  "@type": "TechArticle",
  "headline": entry.data.title,
  "description": entry.data.description,
  "datePublished": entry.data.pubDate.toISOString(),
  "author": {
    "@type": "Organization",
    "name": "Gemma-3n.net"
  },
  "publisher": {
    "@type": "Organization",
    "name": "Gemma-3n.net",
    "logo": {
      "@type": "ImageObject",
      "url": "https://gemma-3n.net/logo.png" // Replace with actual logo URL
    }
  }
};
---
<script type="application/ld+json" set:html={JSON.stringify(schema)} />

<MainLayout title={entry.data.title} description={entry.data.description}>
  <div class="max-w-4xl mx-auto px-4">
    <header class="py-12 sm:py-20 text-center">
      <p class="text-sm text-blue-600 dark:text-blue-400 font-semibold">{new Date(entry.data.pubDate).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}</p>
      <h1 class="text-3xl sm:text-5xl font-bold mt-2 text-slate-900 dark:text-white !leading-tight">{entry.data.title}</h1>
    </header>
    <article class="prose prose-slate dark:prose-invert max-w-none">
      <Content />
    </article>
    
    <ShareButtons title={entry.data.title} url={Astro.url} />
    <Giscus />
  </div>
</MainLayout>

<style>
  /* Add your styles here */
</style> 