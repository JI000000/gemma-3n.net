---
import { getLangFromUrl, useTranslations } from '../i18n';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const faqs = [
  { question: 'faq.q1', answer: 'faq.a1' },
  { question: 'faq.q2', answer: 'faq.a2' },
  { question: 'faq.q3', answer: 'faq.a3' },
  { question: 'faq.q4', answer: 'faq.a4' },
  { question: 'faq.q5', answer: 'faq.a5' },
  { question: 'faq.q6', answer: 'faq.a6' },
  { question: 'faq.q7', answer: 'faq.a7' },
  { question: 'faq.q8', answer: 'faq.a8' },
  { question: 'faq.q9', answer: 'faq.a9' },
  { question: 'faq.q10', answer: 'faq.a10' },
];

const schema = {
  "@context": "https://schema.org",
  "@type": "FAQPage",
  "mainEntity": faqs.map(faq => ({
    "@type": "Question",
    "name": faq.question,
    "acceptedAnswer": {
      "@type": "Answer",
      "text": faq.answer
    }
  }))
};
---

<script type="application/ld+json" set:html={JSON.stringify(schema)} />

<section id="faq" class="py-20 sm:py-32 bg-white dark:bg-slate-900">
  <div class="max-w-4xl mx-auto px-4">
    <div class="text-center">
      <h2 class="text-3xl font-bold text-slate-900 dark:text-white sm:text-4xl">{t('faq.heading')}</h2>
      <p class="mt-4 text-lg text-slate-600 dark:text-gray-400">
        {t('faq.subtitle')}
      </p>
    </div>
    <div class="mt-12 space-y-4">
      {faqs.map((faq, index) => (
        <div class="bg-slate-50 dark:bg-gray-800 rounded-lg" data-faq-item>
          <button class="flex items-center justify-between w-full p-6 text-left" data-faq-button>
            <span class="text-lg font-medium text-slate-900 dark:text-white" itemprop="name">{t(faq.question)}</span>
            <svg class="w-6 h-6 text-gray-400 dark:text-gray-400 transform transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
          </button>
          <div class="hidden px-6 pb-6" data-faq-answer itemprop="acceptedAnswer" itemscope itemtype="https://schema.org/Answer">
            <p class="text-slate-600 dark:text-gray-400" itemprop="text">{t(faq.answer)}</p>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const faqItems = document.querySelectorAll('[data-faq-item]');

    faqItems.forEach(item => {
      const button = item.querySelector('[data-faq-button]');
      const answer = item.querySelector('[data-faq-answer]');
      const icon = button.querySelector('svg');

      button.addEventListener('click', () => {
        const isHidden = answer.classList.contains('hidden');
        
        // Hide all other answers
        faqItems.forEach(otherItem => {
          if (otherItem !== item) {
            otherItem.querySelector('[data-faq-answer]').classList.add('hidden');
            otherItem.querySelector('[data-faq-button] svg').classList.remove('rotate-180');
          }
        });

        // Toggle current answer
        if (isHidden) {
          answer.classList.remove('hidden');
          icon.classList.add('rotate-180');
        } else {
          answer.classList.add('hidden');
          icon.classList.remove('rotate-180');
        }
      });
    });
  });
</script> 